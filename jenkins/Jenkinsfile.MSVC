pipeline {
  agent {
    label 'MSVC'
  }
  options {
    buildDiscarder(logRotator(numToKeepStr: '30', artifactNumToKeepStr: '30'))
      checkoutToSubdirectory('source')
      timeout(time: 1, unit: 'HOURS')
  }

  stages {
    stage('Dependencies') { steps {
      rtDownload (
        serverId: 'ARTIFACTORY',
        spec: '''{
          "files": [
            {
              "pattern": "generic-local/thirdparty/glew-2.1.0.zip",
              "target": "deps/"
            },
            {
              "pattern": "generic-local/thirdparty/glfw-3.3.2.zip",
              "target": "deps/"
            },
            {
              "pattern": "generic-local/thirdparty/glm-0.9.9.8.zip",
              "target": "deps/"
            }
          ]
        }'''
      )

      powershell 'git submodule update --init --recursive'
    } }

    stage('CMake') { steps {
      dir("${env.WORKSPACE}/build") {
        //        bat '''cmake -G "Visual Studio 15 2017 Win64" -DCMAKE_PREFIX_PATH=C:/install/tinyxml2/lib/cmake/tinyxml2 -DOSG_DIR=C:/install/OpenSceneGraph-3.6.3-VC2017-64-Release/ -DCMAKE_INSTALL_PREFIX=../install ../source'''
      }
    } }

    stage('Build') {
      steps {
        dir("${env.WORKSPACE}/build") {
          bat '''cmake --build .'''
        }
      }
    }
    //    stage('Artifacts') {
    //      steps {
    //          bat '''tar -cvzf OSGLauncher.tar.gz install/*'''
    //archiveArtifacts artifacts: 'OSGLauncher.tar.gz', fingerprint: true, onlyIfSuccessful: true
    //      }
    //    }
  }

  post {
    always {
      emailext attachLog: true, body: '''${DEFAULT_CONTENT}''', compressLog: true, recipientProviders: [[$class: 'CulpritsRecipientProvider']], subject: '${DEFAULT_SUBJECT}', to: '${DEFAULT_RECIPIENTS}'
    }
  }
}

